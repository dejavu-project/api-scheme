# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: candlestick_struct.proto
# Protobuf Python Version: 4.25.0
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import enums_struct_pb2 as enums__struct__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x18\x63\x61ndlestick_struct.proto\x1a\x12\x65nums_struct.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"O\n\x05Ohlcv\x12\x0c\n\x04open\x18\x01 \x01(\x01\x12\x0c\n\x04high\x18\x02 \x01(\x01\x12\x0b\n\x03low\x18\x03 \x01(\x01\x12\r\n\x05\x63lose\x18\x04 \x01(\x01\x12\x0e\n\x06volume\x18\x05 \x01(\x01\"l\n\x0b\x43\x61ndlestick\x12-\n\ttimestamp\x18\x01 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x15\n\x05ohlcv\x18\x02 \x01(\x0b\x32\x06.Ohlcv\x12\x17\n\x06signal\x18\x03 \x01(\x0b\x32\x07.Signal\"\xa5\x01\n\x06Signal\x12-\n\ttimestamp\x18\x01 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x1b\n\x08position\x18\x02 \x01(\x0e\x32\t.Position\x12\x13\n\x04side\x18\x03 \x01(\x0e\x32\x05.Side\x12\x13\n\x0btake_profit\x18\x04 \x01(\x01\x12\x11\n\tstop_loss\x18\x05 \x01(\x01\x12\x12\n\nconfidence\x18\x06 \x01(\x01\x62\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'candlestick_struct_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
  DESCRIPTOR._options = None
  _globals['_OHLCV']._serialized_start=81
  _globals['_OHLCV']._serialized_end=160
  _globals['_CANDLESTICK']._serialized_start=162
  _globals['_CANDLESTICK']._serialized_end=270
  _globals['_SIGNAL']._serialized_start=273
  _globals['_SIGNAL']._serialized_end=438
# @@protoc_insertion_point(module_scope)
